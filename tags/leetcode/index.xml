<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCode on Lin Yang&#39;s Blog</title>
    <link>https://yl305237731.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on Lin Yang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 10 Mar 2019 15:30:15 +0800</lastBuildDate>
    
	<atom:link href="https://yl305237731.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeetCode:开方函数sqrt实现</title>
      <link>https://yl305237731.github.io/post/alg1/</link>
      <pubDate>Sun, 10 Mar 2019 15:30:15 +0800</pubDate>
      
      <guid>https://yl305237731.github.io/post/alg1/</guid>
      <description>要求实现开方函数，面试时这个问题出现的次数还是比较多的。 一：二分查找法 对于一个给定的非负数A，它的平方根都不会大于[A/2+1],故在[0,A/2+1]的范围内进行二分查找
def sqrt(target): low = 0 high = target // 2 + 1 while low &amp;lt;= high: mid = (low + high) // 2 sq = mid * mid if target == sq: return mid else: if target &amp;gt; sq: low = mid + 1 else: high = mid - 1  二：牛顿迭代法 二分法，基本都能想到。面试官想要的都是牛顿迭代法的解答。 参照百度百科，此时求解方程$f(x)=x^2-a$,开方即求$f(x)=0$,一阶泰勒展开： $$f(x)=f(x_0) + f^{&amp;lsquo;}(x_0)(x-x_0)$$ 令为0，可得更新公式： $$x = \frac{1}{2}(x_0+\frac{a}{x_0})$$
def sqrt(target): if target == 0: return 0 last = 0 res = 1 while(abs(last-res)&amp;gt;=0.</description>
    </item>
    
  </channel>
</rss>